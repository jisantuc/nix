#! @perl@ -w

my $binDir = $ENV{"NIX_BIN_DIR"};
$binDir = "@bindir@" unless defined $binDir;


if (scalar @ARGV < 1) {
    print STDERR <<EOF
Usage: nix-copy-closure HOSTNAME [--sign] PATHS...
EOF
    ;
    exit 1;
}


# Get the target host.
my $sshHost;
my @sshOpts = split ' ', ($ENV{"NIX_SSHOPTS"} or "");

my $sign = 0;

my $compressor = "cat";
my $decompressor = "cat";

my $toMode = 1;


# !!! Copied from nix-pack-closure, should put this in a module.
my @storePaths = ();

while (@ARGV) {
    my $arg = shift @ARGV;
    if ($arg eq "--sign") {
        $sign = 1;
        next;
    }
    if ($arg eq "--gzip") {
        $compressor = "gzip";
        $decompressor = "gunzip";
        next;
    }

    if (!defined $sshHost) {
        $sshHost = $arg;
        next;
    }

    push @storePaths, $arg;
}


if ($toMode) { # Copy TO the remote machine.

    my @allStorePaths;
    my %storePathsSeen;

    foreach my $storePath (@storePaths) {
        # $arg might be a symlink to the store, so resolve it.
        my $storePath2 = (`$binDir/nix-store --query --resolve '$storePath'`
            or die "cannot resolve `$storePath'");
        chomp $storePath2;

        # Get the closure of this path.
        my $pid = open(READ,
            "$binDir/nix-store --query --requisites '$storePath2'|") or die;
    
        while (<READ>) {
            chomp;
            die "bad: $_" unless /^\//;
            if (!defined $storePathsSeen{$_}) {
                push @allStorePaths, $_;
                $storePathsSeen{$_} = 1
            }
        }

        close READ or die "nix-store failed: $?";
    }


    # Ask the remote host which paths are invalid.
    open(READ, "ssh @sshOpts $sshHost nix-store --check-validity --print-invalid @allStorePaths|");
    my @missing = ();
    while (<READ>) {
        chomp;
        print STDERR "target needs $_\n";
        push @missing, $_;
    }
    close READ or die;


    # Export the store paths and import them on the remote machine.
    if (scalar @missing > 0) {
        my $extraOpts = "";
        $extraOpts .= "--sign" if $sign == 1;
        system("nix-store --export $extraOpts @missing | $compressor | ssh @sshOpts $sshHost '$decompressor | nix-store --import'") == 0
            or die "copying store paths to remote machine failed: $?";
    }

}
